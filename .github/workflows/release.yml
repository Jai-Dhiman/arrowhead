name: Release

on:
  push:
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always

jobs:
  release:
    name: Release - ${{ matrix.platform.os-name }}
    strategy:
      matrix:
        platform:
          - os-name: 'Linux-x86_64'
            runs-on: ubuntu-latest
            target: x86_64-unknown-linux-musl
            bin: 'arrowhead'
            name: 'arrowhead-Linux-x86_64.tar.gz'
          - os-name: 'macOS-x86_64'
            runs-on: macos-latest
            target: x86_64-apple-darwin
            bin: 'arrowhead'
            name: 'arrowhead-Darwin-x86_64.tar.gz'
          - os-name: 'macOS-arm64'
            runs-on: macos-latest
            target: aarch64-apple-darwin
            bin: 'arrowhead'
            name: 'arrowhead-Darwin-arm64.tar.gz'
          - os-name: 'Windows-x86_64'
            runs-on: windows-latest
            target: x86_64-pc-windows-msvc
            bin: 'arrowhead.exe'
            name: 'arrowhead-Windows-x86_64.zip'

    runs-on: ${{ matrix.platform.runs-on }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform.target }}

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2

      - name: Install musl-tools on Linux
        if: matrix.platform.target == 'x86_64-unknown-linux-musl'
        run: sudo apt-get update && sudo apt-get install -y musl-tools

      - name: Build binary
        run: cargo build --release --locked --target ${{ matrix.platform.target }}

      - name: Package binary (Unix)
        if: matrix.platform.runs-on != 'windows-latest'
        run: |
          cd target/${{ matrix.platform.target }}/release
          tar czvf ../../../${{ matrix.platform.name }} ${{ matrix.platform.bin }}
          cd -

      - name: Package binary (Windows)
        if: matrix.platform.runs-on == 'windows-latest'
        run: |
          cd target/${{ matrix.platform.target }}/release
          7z a ../../../${{ matrix.platform.name }} ${{ matrix.platform.bin }}
          cd -

      - name: Generate SHA256 checksums
        run: |
          if [ "${{ matrix.platform.runs-on }}" = "windows-latest" ]; then
            certutil -hashfile ${{ matrix.platform.name }} SHA256 > ${{ matrix.platform.name }}.sha256
          else
            shasum -a 256 ${{ matrix.platform.name }} > ${{ matrix.platform.name }}.sha256
          fi
        shell: bash

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            ${{ matrix.platform.name }}
            ${{ matrix.platform.name }}.sha256
          prerelease: ${{ contains(github.ref, '-') }}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}